<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


    <!-- Spring的配置文件，这里主要配置和业务逻辑有关的 -->
    <!--=================== 数据源，事务控制，xxx ================-->
    <context:property-placeholder location="classpath:environment/develop-env.properties" />

    <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="pooledDataSource" />
    </bean>

    <!--================== 配置和MyBatis的整合=============== -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:typeAliasesPackage="com.xly.mall.dataaccess.domain" >
        <!-- 指定mybatis全局配置文件的位置 -->
        <property name="dataSource" ref="pooledDataSource"/>
        <property name="configLocation" value="classpath:sqlmap-config.xml"/>
        <!-- 指定mybatis，mapper文件的位置 -->
        <!--<property name="mapperLocations" value="classpath:sqlmap/*.xml"></property>-->
    </bean>

    <!-- 配置扫描器，将mybatis接口的实现加入到ioc容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" p:sqlSessionFactoryBeanName="sqlSessionFactory"
          p:basePackage="com.xly.mall.dataaccess.dao.mysql">
        <!--&lt;!&ndash;扫描所有dao接口的实现，加入到ioc容器中 &ndash;&gt;-->
        <!--<property name="basePackage" value="com.xly.mall.dataaccess.dao.mysql"/>-->
    </bean>

    <!-- 配置一个可以执行批量的sqlSession -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>
    <!--=============================================  -->

     <!--事务注解驱动-->
    <!--<tx:annotation-driven transaction-manager="transactionManager" />-->

     <!--===============事务控制的配置 ================-->
    <!--<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--&lt;!&ndash;控制住数据源  &ndash;&gt;-->
        <!--<property name="dataSource" ref="pooledDataSource"></property>-->
    <!--</bean>-->
    <!--&lt;!&ndash;开启基于注解的事务，使用xml配置形式的事务（必要主要的都是使用配置式）  &ndash;&gt;-->
    <!--<aop:config>-->
        <!--&lt;!&ndash; 切入点表达式 &ndash;&gt;-->
        <!--<aop:pointcut expression="execution(* com.atguigu.crud.service..*(..))" id="txPoint"/>-->
        <!--&lt;!&ndash; 配置事务增强 &ndash;&gt;-->
        <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>-->
    <!--</aop:config>-->

    <!--&lt;!&ndash;配置事务增强，事务如何切入  &ndash;&gt;-->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
        <!--<tx:attributes>-->
            <!--&lt;!&ndash; 所有方法都是事务方法 &ndash;&gt;-->
            <!--<tx:method name="*"/>-->
            <!--&lt;!&ndash;以get开始的所有方法  &ndash;&gt;-->
            <!--<tx:method name="get*" read-only="true"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!-- Spring配置文件的核心点（数据源、与mybatis的整合，事务控制） -->
</beans>